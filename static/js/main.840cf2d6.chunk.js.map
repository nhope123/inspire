{"version":3,"sources":["assets/quotes.ts","assets/variables.ts","helpers/randomHelper.ts","components/inspire/inspireStyles.ts","components/inspire/Inspire.tsx","reportWebVitals.ts","index.tsx"],"names":["quotes","title","author","colors","font","betterWithBlack","quoteMe","fontColor","randomNumber","Math","floor","random","length","randomColor","randomFont","includes","console","log","bgColor","color","useStyles","makeStyles","theme","root","display","flexDirection","justifyContent","alignItems","overflow","height","width","card","maxWidth","spacing","padding","borderRadius","rowGap","fullBlock","bottom","linkBlock","columnGap","link","position","transform","textDecoration","zIndex","footer","fontWeight","button","Inspire","useState","quote","setQuote","classes","container","backgroundColor","fontFamily","_handleClick","debounce","className","style","Paper","elevation","Typography","variant","align","clsx","href","target","rel","Twitter","GitHub","Button","onClick","onKeyDown","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.840cf2d6.chunk.js","sourcesContent":["export interface Quotes {\n  title: string;\n  author: string;\n}\n\n/* 11 Quotes to be randomized: {title:'', author:''},*/\nconst quotes = [\n  {\n    title:\"Programming isn't about what you know; it's about what you can figure out.\",\n    author:'Chris Pine'\n  },\n  {\n    title:\"The only way to learn a new programming language is by writing programs in it.\",\n    author:'Dennis Ritchie'\n  },\n  {\n    title:\"Sometimes it's better to leave something alone, to pause, and that's very true of programming.\",\n    author:'Joyce Wheeler'\n  },\n  {\n    title:\"In some ways, programming is like painting. You start with a blank canvas and certain basic raw materials. You use a combination of science, art, and craft to determine what to do with them.\",\n    author:'Andrew Hunt'\n  },\n  {\n    title:\"Testing leads to failure, and failure leads to understanding.\",\n    author:'Burt Rutan'\n  },\n  {\n    title:\"The best error message is the one that never shows up.\",\n    author:'Thomas Fuchs'\n  },\n  {\n    title:\"The most damaging phrase in the language is.. it's always been done this way\",\n    author:'Grace Hopper'\n  },\n  {\n    title:\"Don't write better error messages, write code that doesn't need them.\",\n    author:'Jason C. McDonald'\n  },\n  {\n    title: \"I think everybody in this country should learn how to program a computer because it teaches you how to think.\",\n    author:'Steve Jobs'\n  },\n  {\n    title:\"Measuring programming progress by lines of code is like measuring aircraft building progress by weight.\",\n    author:'Bill Gates'\n  },\n  {\n    title:\"The best thing about a boolean is even if you are wrong, you are only off by a bit.\",\n    author:'Anonymous'\n  }\n];\n\nexport default quotes;","/* Random color for bacground and text */\nexport const colors = [\n  '#50796d','#FF6F61','#9B1B30','#77212E','#dd713c',\n  '#fa9a85','#5a3e36', '#ce5b78','#935529','#e08119', '#2a4b7c','#577284',\n  '#f96714','#264e36','#d79728','#2a293e','#9f9c99', '#797b3a','#dd4132',\n  '#9e1030','#fe840e','#c62168','#8d9440','#ffd662','#00539c'\n];\n\n/* Random font-family for text */\nexport const font = [\n  \"'Balsamiq Sans', cursive\",\n  \"'Open Sans', sans-serif\",\n  \"'Roboto', sans-serif\",\n  \"monospace\"\n];\n\n/* Background color better suited for black fonts */\nexport const betterWithBlack = [\n  '#FF6F61','#DF7B49','#fa9a85','#D98197','#e08119','#F96C1A','#d79728',\n  '#9f9c99','#999C49','#E7746A','#fe840e','#ffd662'\n];","import quotes from '../assets/quotes';\nimport {colors, font, betterWithBlack} from '../assets/variables';\n\nexport const quoteMe = () => {\n  var randomNumber = Math.floor(Math.random() * quotes.length);\n  var randomColor = colors[Math.floor(Math.random() * colors.length)] ;\n  var randomFont = font[ Math.floor(Math.random() * font.length) ];\n  /* select font contrast for WCAG */\n  var fontColor;\n  if (betterWithBlack.includes(randomColor)) { fontColor = 'black'; }\n  else {  fontColor = 'white'; }\n\n  console.log('num', quotes[5].title);\n  \n\n  return ({\n    title: quotes[randomNumber].title,\n    author: quotes[randomNumber].author,\n    bgColor: randomColor,\n    font: randomFont,\n    color: fontColor,\n  });\n}\n\n/* 8, 10, 6, 1,11, 7\n  ,2,3,4,5,,, ,9, ,\n*/","import { makeStyles } from \"@material-ui/core\";\n\nexport const useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'center',\n    alignItems: 'center',\n    overflow: 'hidden',\n    height: '100vh',\n    width: '100vw',    \n  },\n  card: {\n    maxWidth: `${theme.spacing(94)}px`,\n    width: '90%',\n    height: 'auto',\n    padding: theme.spacing(2),\n    borderRadius: `${theme.spacing(1)}px`,\n    display: 'flex',\n    flexDirection: 'column',\n    rowGap: `${theme.spacing(1)}px`,\n  },\n  fullBlock: {\n    width: '100%',\n  },\n  bottom: {\n    display: 'flex',\n    justifyContent: 'space-between',\n  },\n  linkBlock: {\n    display: 'flex',\n    columnGap: `${theme.spacing(1)}px`,\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  link: {\n    position: 'relative',\n    height: 'auto',\n    transform: 'scale(0.9)',\n    textDecoration: 'none',\n    '& :hover': {\n      color: 'inherit',\n      transform: 'scale(1.1)',\n      zIndex: 2,\n\n    },\n    '& :visited': {color: 'inherit'},\n  },\n  footer: {\n    position: 'absolute',\n    bottom: '10vh',\n    width: '100%',\n    display: 'flex',\n    justifyContent: 'center',\n    fontWeight: 'bold',    \n  },\n  button: {\n    '& :active': {\n      transform: 'scale(0.95)',\n    },\n  },\n}));","import { Button, debounce, Paper, Typography } from '@material-ui/core';\nimport { GitHub, Twitter } from '@material-ui/icons';\nimport clsx from 'clsx';\nimport React, {useState} from 'react';\nimport { quoteMe } from '../../helpers/randomHelper';\nimport { useStyles } from './inspireStyles';\n\ninterface InspireProps {\n  author: string;\n  bgColor: string;\n  color: string;\n  font: string;\n  title: string;\n}\n\nconst twitter = 'https://twitter.com/intent/tweet';\nconst website = 'https://nhope123.github.io/'; \nconst github = 'https://github.com/nhope123/inspire';\n\nconst Inspire: React.FC = () => {\n  const [quote, setQuote] = useState<InspireProps>(quoteMe());\n  const classes = useStyles();\n\n  const container ={backgroundColor: quote.bgColor, fontFamily: quote.font };\n  const button = {backgroundColor: quote.bgColor, color: quote.color};\n\n  console.log('quote', quote);\n\n  const _handleClick = debounce(() => {\n    setQuote(() => quoteMe());\n  }, 600);\n  \n\n  return (\n    <div \n      className={classes.root}\n      style={container}\n    >\n      <Paper\n        className={classes.card}\n        elevation={15}\n      >\n        <div className={classes.fullBlock}>\n          <Typography\n            variant='h6'\n            align='center'\n          >\n            {quote.title}\n          </Typography>\n        </div>\n        <div className={classes.fullBlock}>\n          <Typography\n            variant='h6'\n            align='right'\n          >\n            {`~ ${quote.author}`}\n          </Typography>\n        </div>\n        <div className={clsx(classes.fullBlock, classes.bottom)}> \n          <div className={classes.linkBlock}>\n            <a\n              className={classes.link}\n              style={{color: quote.bgColor}}\n              href={twitter}\n              target={'_blank'} \n              rel=\"noopener noreferrer\"         \n            >\n              <Twitter />\n            </a>\n            <a\n              className={classes.link}\n              style={{color: quote.bgColor}}\n              href={github}\n              target={'_blank'}\n              rel=\"noopener noreferrer\"\n            >\n              <GitHub />\n            </a>\n          </div>       \n          <Button\n            className={classes.button}\n            onClick={() => _handleClick()}\n            onKeyDown={() => _handleClick()}\n            style={button}\n            title={quote.title}\n            variant='contained'\n          >\n            {'Next Quote'}\n          </Button>\n        </div>     \n      </Paper>\n      <div className={clsx(classes.footer, classes.fullBlock)}>        \n        <a\n          className={classes.link}\n          style={{color: quote.color}}\n          href={website}\n          target={'_blank'} \n          rel=\"noopener noreferrer\"\n        >\n          {'by Nial'}\n        </a>\n      </div>\n    </div>\n    \n  );\n};\n\nexport default Inspire;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","/* Author: Nial Hope\n   Creation date: 8th August, 2020\n*/\nimport Inspire from './components/inspire/Inspire';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter } from 'react-router-dom';\n\nReactDOM.render(\n  <React.StrictMode>\n\t\t<BrowserRouter>\n\t\t\t<Inspire />\n\t\t</BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}