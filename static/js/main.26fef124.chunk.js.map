{"version":3,"sources":["index.js"],"names":["quotes","1","title","author","2","3","4","5","6","7","8","9","10","11","colors","font","betterWithBlack","quoteMe","fontColor","randomNumber","Math","floor","random","randomColor","length","randomFont","includes","Inspire","props","state","color","fonts","textColor","randomizer","bind","text","name","bColor","this","setState","className","style","backgroundColor","fontFamily","id","href","aria-hidden","onClick","onKeyDown","tabindex","React","Component","prop","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.26fef124.chunk.js","sourcesContent":["/* Author: Nial Hope\n   Creation date: 8th August, 2020\n*/\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n/* 11 Quotes to be randomized: {title:'', author:''},*/\nlet quotes = {\n  1:{title:\"Programming isn't about what you know; it's about what you can figure out.\", author:'Chris Pine'},\n  2:{title:\"The only way to learn a new programming language is by writing programs in it.\", author:'Dennis Ritchie'},\n  3:{title:\"Sometimes it's better to leave something alone, to pause, and that's very true of programming.\", author:'Joyce Wheeler'},\n  4:{title:\"In some ways, programming is like painting. You start with a blank canvas and certain basic raw materials. You use a combination of science, art, and craft to determine what to do with them.\",\n   author:'Andrew Hunt'},\n  5:{title:\"Testing leads to failure, and failure leads to understanding.\",\n   author:'Burt Rutan'},\n  6:{title:\"The best error message is the one that never shows up.\",\n   author:'Thomas Fuchs'},\n  7:{title:\"The most damaging phrase in the language is.. it's always been done this way\",\n   author:'Grace Hopper'},\n  8:{title:\"Don't write better error messages, write code that doesn't need them.\",\n   author:'Jason C. McDonald'},\n  9:{title: \"I think everybody in this country should learn how to program a computer because it teaches you how to think.\",\n   author:'Steve Jobs'},\n  10:{title:\"Measuring programming progress by lines of code is like measuring aircraft building progress by weight.\",\n   author:'Bill Gates'},\n  11:{title:\"The best thing about a boolean is even if you are wrong, you are only off by a bit.\",\n   author:'Anonymous'}\n};\n\n/* Random color for bacground and text */\nlet colors = ['#50796d','#FF6F61','#9B1B30','#77212E','#dd713c',\n              '#fa9a85','#5a3e36', '#ce5b78','#935529','#e08119', '#2a4b7c','#577284',\n              '#f96714','#264e36','#d79728','#2a293e','#9f9c99', '#797b3a','#dd4132',\n              '#9e1030','#fe840e','#c62168','#8d9440','#ffd662','#00539c'\n            ];\n\n/* Random font-family for text */\nlet font = [\"'Balsamiq Sans', cursive\",\n            \"'Open Sans', sans-serif\",\n            \"'Roboto', sans-serif\",\n            \"monospace\"];\n\n/* Background color better suited for black fonts */\nlet betterWithBlack = ['#FF6F61','#DF7B49','#fa9a85','#D98197','#e08119','#F96C1A','#d79728',\n                        '#9f9c99','#999C49','#E7746A','#fe840e','#ffd662'];\n\n/* Function select random quote, random color, random font-family and select passing WCAG font contrast */\nconst quoteMe = ()=>{\n  var randomNumber = Math.floor(Math.random() * 11) + 1;\n  var randomColor = colors[Math.floor(Math.random() * colors.length)] ;\n  var randomFont = font[ Math.floor(Math.random() * font.length) ];\n  /* select font contrast for WCAG */\n  var fontColor;\n  if (betterWithBlack.includes(randomColor)) { fontColor = 'black'; }\n  else {  fontColor = 'white'; }\n  return ([quotes[randomNumber].title, quotes[randomNumber].author, randomColor, randomFont, fontColor ]);\n}\n\n/* Main app component */\nclass Inspire extends React.Component{\n  constructor(props){\n    super(props);\n    this.state = {color: this.props.color,\n                  title: this.props.title,\n                  author:this.props.author,\n                  fonts: this.props.font,\n                  textColor: this.props.fontColor};\n    this.randomizer = this.randomizer.bind(this);\n  }\n  /* Create / update app with random content */\n  randomizer(){\n    const [text, name, bColor, font, fontColor] = quoteMe();\n    this.setState(\n      {\n        title: text, author: name, color: bColor, fonts: font, textColor: fontColor\n      }\n    )\n  }\n\n  render(){\n    return(\n      <div className=\"react-container\" style={{backgroundColor: this.state.color, fontFamily:this.state.fonts }}>{/* Main container*/}\n        <section id=\"quote-box\"  > {/* Container hold the random quote elements */}\n          <div id=\"text\" > {this.state.title}</div> {/* Random quote text */}\n          <div id=\"author\" title=\"Author\">{\"~ \" + this.state.author}</div> {/* Random quote Author citing */}\n          <div className=\"interact\">\n            <a id=\"tweet-quote\" href=\"twitter.com/intent/tweet\" title=\"Tweet quote\" style={{color: this.state.color}} > {/* Link to tweet quote */}\n              <i className=\"fa fa-twitter\" aria-hidden=\"true\"></i>\n            </a>\n            <div id=\"new-quote\" onClick={this.randomizer} onKeyDown={this.randomizer} tabindex=\"0\" title=\"Next Quote\"\n             style={{ backgroundColor: this.state.color, color: this.state.textColor}}>Next Quote</div> {/* Next quote selection buttom */}\n          </div>\n        </section>\n        <div id=\"creator\" style={{color: this.state.textColor}}>by Nial</div> {/* Creator citation */}\n      </div>\n    );\n  }\n}\n\nconst [text, name, bColor, fonty,fontsColor] = quoteMe();\nconst prop = {color: bColor, title: text, author: name, font:fonty, fontColor:fontsColor};\n/* Render the app */\nReactDOM.render(<Inspire {...prop} />,document.getElementById('body'));\n"],"sourceRoot":""}